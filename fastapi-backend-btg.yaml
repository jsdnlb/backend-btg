AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a FastAPI application on ECS Fargate with automatically created VPC and Subnet

Resources:
  # Create VPC
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      Tags:
        - Key: Name
          Value: 'fastapi-vpc'

  # Create public Subnet inside VPC
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone: 'us-east-1a' 
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'fastapi-public-subnet'

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: 'fastapi-igw'

  #  Attaches the Internet Gateway to the VPC
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Create a routing table for the VPC
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'fastapi-route-table'

  # Create a route to allow traffic to the Internet
  Route:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  # Associate the route table with the Subnet
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  # Create a log group for ECS
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: '/ecs/fastapi-log-group'
      RetentionInDays: 7

  # Create an execution role for the ECS task
  ExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'fastapi-task-execution-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'ecs-tasks.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'

  # Create an ECS task definition
  TaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: 'fastapi-task-definition'
      RequiresCompatibilities:
        - 'FARGATE'
      NetworkMode: 'awsvpc'
      Cpu: '256'
      Memory: '512'
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      ContainerDefinitions:
        - Name: 'fastapi-container'
          Image: '<account_id>.dkr.ecr.us-east-1.amazonaws.com/backend-btg-coker:latest'
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: 'us-east-1'
              awslogs-stream-prefix: 'ecs'

  # Create a security group to allow HTTP traffic
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Allow HTTP traffic'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'

  # Create an ECS service definition
  ECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: 'fastapi-service'
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: 'FARGATE'
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref PublicSubnet
          SecurityGroups:
            - !Ref SecurityGroup
          AssignPublicIp: 'ENABLED'

  # Create an ECS cluster
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: 'fastapi-cluster'
